{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthService {\n  login(email, password) {\n    return axios.post(\"http://localhost:3000/Pessoas/login\", {\n      email,\n      password\n    }).then(res => {\n      if (res.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(res.data));\n      }\n\n      return res.data;\n    }, reason => {\n      throw new Error('Utilizador Inválido');\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/hugom/OneDrive/Documentos/GitHub/frontend-pint-2021/Web/frontend/src/view/auth.service.js"],"names":["axios","AuthService","login","email","password","post","then","res","data","token","localStorage","setItem","JSON","stringify","reason","Error","logout","removeItem","getCurrentUser","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAN,CAAkB;AACVC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACnB,WAAOJ,KAAK,CACXK,IADM,CACD,qCADC,EACsC;AAACF,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KADtC,EAENE,IAFM,CAEDC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,KAAb,EAAoB;AAChBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,GAAG,CAACC,IAAnB,CAA7B;AACH;;AACD,aAAOD,GAAG,CAACC,IAAX;AACH,KAPM,EAOJM,MAAM,IAAI;AAAE,YAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AAAwC,KAPhD,CAAP;AAQH;;AACDC,EAAAA,MAAM,GAAG;AAAEN,IAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AAAkC;;AAC7CC,EAAAA,cAAc,GAAG;AAAE,WAAON,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAiD;;AAZ1D;;AAahB,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nclass AuthService {\r\n        login(email, password) {\r\n            return axios\r\n            .post(\"http://localhost:3000/Pessoas/login\", {email, password})\r\n            .then(res => {\r\n                if (res.data.token) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n                }\r\n                return res.data;\r\n            }, reason => { throw new Error('Utilizador Inválido');});\r\n        }\r\n        logout() { localStorage.removeItem(\"user\"); }\r\n        getCurrentUser() { return JSON.parse(localStorage.getItem('user'));}\r\n} export default new AuthService();\r\n"]},"metadata":{},"sourceType":"module"}