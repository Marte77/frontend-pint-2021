/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { IAccessibilityType, IAxisType, IBoxModelType, IClickStyleType, IDataLabelType, IHoverStyleType, ILegendType, IReferenceStyleType, ITooltipLabelType, } from "@visa/charts-types";
export namespace Components {
    interface BarChart {
        "accessibility": IAccessibilityType;
        "annotations": object[];
        "barIntervalRatio": number;
        "clickHighlight": object[];
        "clickStyle": IClickStyleType;
        "colorPalette": string;
        "colors": string[];
        "cursor": string;
        "data": object[];
        "dataLabel": IDataLabelType;
        "groupAccessor": string;
        "height": number;
        "highestHeadingLevel": string | number;
        "hoverHighlight": object;
        "hoverOpacity": number;
        "hoverStyle": IHoverStyleType;
        "interactionKeys": string[];
        "layout": string;
        "legend": ILegendType;
        "mainTitle": string;
        "margin": IBoxModelType;
        "maxValueOverride": number;
        "minValueOverride": number;
        "ordinalAccessor": string;
        "padding": IBoxModelType;
        "referenceLines": object[];
        "referenceStyle": IReferenceStyleType;
        "roundedCorner": number;
        "showTooltip": boolean;
        "sortOrder": string;
        "subTitle": string;
        "suppressEvents": boolean;
        "tooltipLabel": ITooltipLabelType;
        "uniqueID": string;
        "unitTest": boolean;
        "valueAccessor": string;
        "width": number;
        "wrapLabel": boolean;
        "xAxis": IAxisType;
        "yAxis": IAxisType;
    }
}
declare global {
    interface HTMLBarChartElement extends Components.BarChart, HTMLStencilElement {
    }
    var HTMLBarChartElement: {
        prototype: HTMLBarChartElement;
        new (): HTMLBarChartElement;
    };
    interface HTMLElementTagNameMap {
        "bar-chart": HTMLBarChartElement;
    }
}
declare namespace LocalJSX {
    interface BarChart {
        "accessibility"?: IAccessibilityType;
        "annotations"?: object[];
        "barIntervalRatio"?: number;
        "clickHighlight"?: object[];
        "clickStyle"?: IClickStyleType;
        "colorPalette"?: string;
        "colors"?: string[];
        "cursor"?: string;
        "data"?: object[];
        "dataLabel"?: IDataLabelType;
        "groupAccessor"?: string;
        "height"?: number;
        "highestHeadingLevel"?: string | number;
        "hoverHighlight"?: object;
        "hoverOpacity"?: number;
        "hoverStyle"?: IHoverStyleType;
        "interactionKeys"?: string[];
        "layout"?: string;
        "legend"?: ILegendType;
        "mainTitle"?: string;
        "margin"?: IBoxModelType;
        "maxValueOverride"?: number;
        "minValueOverride"?: number;
        "onClickFunc"?: (event: CustomEvent<any>) => void;
        "onHoverFunc"?: (event: CustomEvent<any>) => void;
        "onMouseOutFunc"?: (event: CustomEvent<any>) => void;
        "ordinalAccessor"?: string;
        "padding"?: IBoxModelType;
        "referenceLines"?: object[];
        "referenceStyle"?: IReferenceStyleType;
        "roundedCorner"?: number;
        "showTooltip"?: boolean;
        "sortOrder"?: string;
        "subTitle"?: string;
        "suppressEvents"?: boolean;
        "tooltipLabel"?: ITooltipLabelType;
        "uniqueID"?: string;
        "unitTest"?: boolean;
        "valueAccessor"?: string;
        "width"?: number;
        "wrapLabel"?: boolean;
        "xAxis"?: IAxisType;
        "yAxis"?: IAxisType;
    }
    interface IntrinsicElements {
        "bar-chart": BarChart;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "bar-chart": LocalJSX.BarChart & JSXBase.HTMLAttributes<HTMLBarChartElement>;
        }
    }
}
